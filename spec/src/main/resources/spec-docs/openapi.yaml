openapi: 3.0.3
info:
  title: User API
  description: API for managing users
  version: 1.0.0

tags:
  - name: users
    description: Operations about user
  - name: projects
    description: Operations about project
  - name: apis
    description: Operations about api spec
paths:
  /v1/users:
    post:
      tags:
        - users
      summary: 사용자 가입
      description: 새로운 사용자를 가입합니다.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 가입 성공
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/User'
        '400':
          description: 가입 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
    get:
      tags:
        - users
      summary: 사용자 목록 조회
      description: 사용자 목록을 조회합니다.
      operationId: queryUserList
      parameters:
        - in: query
          name: userQueryParams
          schema:
            $ref: '#/components/schemas/UserQuery'
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
  /v1/users/{userId}:
    get:
      tags:
        - users
      summary: 사용자 상세 조회
      description: 사용자 ID로 상세정보를 조회
      operationId: getUserInfo
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
    put:
      tags:
        - users
      summary: 사용자 정보 수정
      description: 사용자 ID로 사용자의 정보를 수정합니다.
      operationId: updateUserInfo
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: 수정 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
    delete:
      tags:
        - users
      summary: 사용자 탈퇴
      description: 사용자 ID로 사용자를 탈퇴 처리합니다.
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 탈퇴 성공
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 탈퇴 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
  /v1/auth/users:
    post:
      tags:
        - users
      summary: 사용자 로그인
      description: 사용자 로그인 처리
      operationId: userLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
        '400':
          description: 로그인 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
  /v1/auth/users/verify:
    put:
      tags:
        - users
      summary: 사용자 인증
      description: 인증 단축 URL을 통해 사용자를 인증합니다.
      operationId: verifyUser
      parameters:
        - in: query
          name: shortUrlPostFix
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 인증 성공
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
  /v1/auth/users/reverify:
    put:
      tags:
        - users
      summary: 사용자 재인증
      description: 사용자를 재인증합니다.
      operationId: reverifyUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 재인증 성공
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 재인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid user data provided
  /v1/projects:
    post:
      tags:
        - projects
      summary: 프로젝트 생성
      description: 새로운 프로젝트를 생성합니다.
      operationId: createProject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: 가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: 가입 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    get:
      tags:
        - projects
      summary: 프로젝트 목록 조회
      description: 프로젝트 목록을 조회합니다.
      operationId: queryProjectList
      parameters:
        - in: query
          name: projectQueryParams
          schema:
            $ref: '#/components/schemas/ProjectQuery'
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
  /v1/projects/{projectId}:
    get:
      tags:
        - projects
      summary: 프로젝트 상세 조회
      description: 프로젝트 ID로 상세정보를 조회
      operationId: getProjectInfo
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    put:
      tags:
        - projects
      summary: 프로젝트 정보 수정
      description: 프로젝트 ID로 프로젝트의 정보를 수정합니다.
      operationId: updateProjectInfo
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: 수정 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    delete:
      tags:
        - projects
      summary: 프로젝트 삭제
      description: 프로젝트 ID로 프로젝트 삭제
      operationId: deleteProject
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
  /v1/projects/{projectId}/users:
    post:
      tags:
        - projects
      summary: 사용자 등록
      description: 프로젝트 사용자를 등록합니다.
      operationId: registerProjectUser
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            $ref: '#/components/schemas/ProjectUser'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUser'
      responses:
        '200':
          description: 사용자 등록 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUser'
        '400':
          description: 등록 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
    put:
      tags:
        - projects
      summary: 사용자 권한 부여
      description: 프로젝트 사용자에게 권한을 부여합니다.
      operationId: giveAuthUser
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUser'
      responses:
        '200':
          description: 권한 부여 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUser'
        '400':
          description: 권한 부여 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    get:
      tags:
        - projects
      summary: 사용자 권한 목록
      description: 프로젝트 사용자 권한 목록을 조회합니다
      operationId: queryProjectUserList
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ProjectUserListQuery'
      responses:
        '200':
          description: 목록 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectUser'
        '400':
          description: 목록 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    delete:
      tags:
        - projects
      summary: 사용자 권한 삭제
      description: 프로젝트 사용자의 권한을 삭제합니다.
      operationId: deleteUserAuth
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 권한 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUser'
        '400':
          description: 권한 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
  /v1/projects/{projectId}/users/auth:
    post:
      tags:
        - projects
      summary: 사용자 권한 양도
      description: 프로젝트 사용자 권한을 다른 사용자에게 양도합니다.
      operationId: userAuthTransfer
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUserTransfer'
      responses:
        '200':
          description: 권한 양도 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUser'
        '400':
          description: 권한 양도 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
  /v1/projects/{projectId}/keys:
    post:
      tags:
        - projects
      summary: Access key 사용요청
      description: Access key 사용 요청합니다.
      operationId: requestAccessKey
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectKeyInfo'
      responses:
        '200':
          description: 권한 양도 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectKeyInfo'
        '400':
          description: 권한 양도 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
  /v1/apis:
    post:
      tags:
        - apis
      summary: api spec 생성
      description: 새로운 api spec를 생성합니다.
      operationId: createApiSpec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISpec'
      responses:
        '200':
          description: 가입 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpec'
        '400':
          description: 가입 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid apispec data provided
    get:
      tags:
        - apis
      summary: api spec 목록 조회
      description: api spec 목록을 조회합니다.
      operationId: queryAPISpecList
      parameters:
        - in: query
          name: apiQueryParams
          schema:
            $ref: '#/components/schemas/APISpecQuery'
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpecList'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid api spec data provided
  /v1/apis/{apiId}:
    get:
      tags:
        - apis
      summary: API Spec 상세 조회
      description: API Spec ID로 상세정보를 조회
      operationId: getAPISpecInfo
      parameters:
        - in: path
          name: apiId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpec'
        '400':
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid API Spec data provided
    put:
      tags:
        - apis
      summary: API Spec 정보 수정
      description: API Spec ID로 프로젝트의 정보를 수정합니다.
      operationId: updateAPISpecInfo
      parameters:
        - in: path
          name: apiId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISpec'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpec'
        '400':
          description: 수정 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid project data provided
    delete:
      tags:
        - apis
      summary: API Spec 삭제
      description: API Spec ID로 프로젝트 삭제
      operationId: deleteAPISpec
      parameters:
        - in: path
          name: apiId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 삭제 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid API Spec data provided
  /v1/apis/{apiId}/file:
    post:
      tags:
        - apis
      summary: API Spec 파일 업로드
      description: API Spec 파일을 업로드합니다
      operationId: uploadAPISpecFile
      parameters:
        - in: path
          name: apiId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISpecFile'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpecFile'
        '400':
          description: 수정 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid API Spec File data provided
  /v1/apis/{apiId}/tags:
    put:
      tags:
        - apis
      summary: API Spec Tagging
      description: API 스펙 태깅
      operationId: tagAPISpec
      parameters:
        - in: path
          name: apiId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APISpec'
      responses:
        '200':
          description: 태깅 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISpec'
        '400':
          description: 태깅 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid API Spec data provided
components:
  schemas:
    User:
      title: User Aggregate
      description: user info
      type: object
      required:
        - username
        - email
      properties:
        userId:
          type: string
          description: 사용자 아이디
        username:
          type: string
          description: 사용자 이름
        phone:
          type: string
          description: 사용자 전화번호
        email:
          type: string
          description: 사용자 이메일
        password:
          type: string
          description: 사용자 비밀번호
        confirmPassword:
          type: string
          description: 사용자 비밀번호 확인
        isActive:
          type: boolean
          description: 사용 여부
        isWithdrawed:
          type: boolean
          description: 탈퇴 여부
        audit:
          $ref: '#/components/schemas/Audit'
    UserToken:
      type: object
      description: 사용자 토큰
      properties:
        accessToken:
          type: string
          description: access token
        refreshToken:
          type: string
          description: refresh token
    UserQuery:
      type: object
      properties:
        userInfo:
          $ref: '#/components/schemas/User'
          description: 사용자 정보
        dateCondition:
          type: array
          items:
            type: object
            properties:
              createDate:
                $ref: '#/components/schemas/Audit'
                description: 생성일 조건
              modifiedDate:
                $ref: '#/components/schemas/Audit'
                description: 수정일 조건
          description: 일자 조건 (생성일 및 수정일)
        queryStart:
          type: string
          format: date-time
          description: 조회 시작일시(YYYYMMDDHHmmss)
        queryStop:
          type: string
          format: date-time
          description: 조회 종료일시 (YYYYMMDDHHmmss)
        sortField:
          type: string
          description: 소트대상 필드
        sortOption:
          type: string
          enum:
            - ASC
            - DESC
          description: sort option ASC/DESC
    UserList:
      type: object
      properties:
        userList:
          type: array
          items:
            $ref: '#/components/schemas/User'
          description: 사용자 목록
        pageInfo:
          type: object
          properties:
            page:
              type: string
              description: 현재 페이지
            size:
              type: string
              description: 페이지 크기
        totalCount:
          type: integer
          description: 총  건수
        selectedCount:
          type: integer
          description: 조회된 건수
    Audit:
      type: object
      properties:
        createdDate:
          type: string
          format: date-time
          description: 생성일
        createdBy:
          type: string
          description: 생성자
        modifiedDate:
          type: string
          format: date-time
          description: 수정일
        modifiedBy:
          type: string
          description: 수정자
    Project:
      title: Project Aggregate
      description: project info
      type: object
      required:
        - projectname
      properties:
        projectId:
          type: integer
          format: int64
          description: 프로젝트 아이디
        projectname:
          type: string
          description: 프로젝트 이름
        projectdesc:
          type: string
          description: 프로젝트 설명
        isActive:
          type: boolean
          description: 사용 여부
        isDeleted:
          type: boolean
          description: 삭제 여부
        audit:
          $ref: '#/components/schemas/Audit'
    ProjectList:
      properties:
        projectList:
          type: array
          items:
            $ref: '#/components/schemas/Project'
          description: 사용자 목록
        pageInfo:
          type: object
          properties:
            page:
              type: string
              description: 현재 페이지
            size:
              type: string
              description: 페이지 크기
        totalCount:
          type: integer
          description: 총  건수
        selectedCount:
          type: integer
          description: 조회된 건수
    ProjectQuery:
      type: object
      properties:
        info:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        dateCondition:
          type: array
          items:
            type: object
            properties:
              createDate:
                $ref: '#/components/schemas/Audit'
                description: 생성일 조건
              modifiedDate:
                $ref: '#/components/schemas/Audit'
                description: 수정일 조건
          description: 일자 조건 (생성일 및 수정일)
        queryStart:
          type: string
          format: date-time
          description: 조회 시작일시(YYYYMMDDHHmmss)
        queryStop:
          type: string
          format: date-time
          description: 조회 종료일시 (YYYYMMDDHHmmss)
        sortField:
          type: string
          description: 소트대상 필드
        sortOption:
          type: string
          enum:
            - ASC
            - DESC
          description: sort option ASC/DESC
      description: 프로젝트 조회조건
    ProjectAuth:
      properties:
        projectId:
          type: string
          description: 프로젝트 ID
        userId:
          type: string
          description: 사용자 ID
        auth:
          type: string
          enum:
            - ADMIN
            - OPERATOR
            - READER
          description: 권한
        isUsed:
          type: string
          description: 사용 여부
        isDeleted:
          type: string
          description: 삭제 여부
        audit:
          $ref: '#/components/schemas/Audit'
      description: 프로젝트 권한
    ProjectUser:
      properties:
        projectAuthList:
          type: array
          items:
            $ref: '#/components/schemas/ProjectAuth'
          description: 프로젝트 권한 목록
      description: 프로젝트 사용자
    ProjectUserTransfer:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/ProjectUser'
          description: 양도하는 프로젝트 사용자 정보
        to:
          $ref: '#/components/schemas/ProjectUser'
          description: 양도받는 프로젝트 사용자 정보
    ProjectUserListQuery:
      properties:
        info:
          type: array
          items:
            $ref: '#/components/schemas/ProjectAuth'
        dateCondition:
          type: array
          items:
            type: object
            properties:
              createDate:
                type: string
                format: date-time
                description: 생성일 조건
              modifiedDate:
                type: string
                format: date-time
                description: 수정일 조건
          description: 일자 조건 (생성일 및 수정일)
        queryStart:
          type: string
          format: date-time
          description: 조회 시작일시(YYYYMMDDHHmmss)
        queryStop:
          type: string
          format: date-time
          description: 조회 종료일시 (YYYYMMDDHHmmss)
        sortField:
          type: string
          description: 소트대상 필드
        sortOption:
          type: string
          enum:
            - ASC
            - DESC
          description: sort option ASC/DESC
      description: 프로젝트 사용자 권한 목록 조회 조건
    ProjectKeyInfo:
      type: object
      properties:
        name:
          type: string
          description: 프로젝트 키 이름
        accessKey:
          type: string
          description: 엑세스 키
        secretKey:
          type: string
          description: 시크릿 키
        timeToLive:
          type: string
          format: time-second
          description: 초 단위 시간
    S3:
      title: S3
      description: S3 위치정보
      type: object
      required:
        - name
        - dir
        - filename
      properties:
        name:
          type: string
          description: 버킷명
        dir:
          type: string
          description: 디렉토리
        filename:
          type: string
          description: 파일 이름
        audit:
          $ref: '#/components/schemas/Audit'
    GitHub:
      title: GitHub
      description: GitHub 정보
      type: object
      properties:
        reponame:
          type: string
          description: 리포지토리 이름
        branchname:
          type: string
          description: 브랜치 이름
        filename:
          type: string
          description: 파일 이름
        audit:
          $ref: '#/components/schemas/Audit'
    APISpecFile:
      title: APISpec file
      description: API Spec 파일
      type: object
      properties:
        fileId:
          type: integer
          format: Integer64
          description: 파일 아이디
        filePath:
          type: string
          description: 파일 경로
        fileName:
          type: string
          description: 파일 이름
        fileSize:
          type: integer
          format: Integer64
          description: 파일크기
        audit:
          type: object
          properties:
            createdDate:
              type: string
              format: date-time
              description: 생성일
            createdBy:
              type: string
              description: 생성자
            modifiedDate:
              type: string
              format: date-time
              description: 수정일
            modifiedBy:
              type: string
              description: 수정자
    APISpec:
      title: APISpec
      description: API Spec 파일
      type: object
      properties:
        specname:
          type: string
          description: 스펙이름
        project:
          $ref: '#/components/schemas/Project'
        specTag:
          type: string
          description: 최신 스펙 버전 태깅
        stableTag:
          type: string
          description: 안정화된 스펙
        storageType:
          type: string
          enum:
            - ALL
            - HOST
            - S3
            - GITHUB
        apiSpecFile:
          $ref: '#/components/schemas/APISpecFile'
        s3Location:
          $ref: '#/components/schemas/S3'
        githubInfo:
          $ref: '#/components/schemas/GitHub'
        audit:
          $ref: '#/components/schemas/Audit'
    APISpecList:
      title: API Spec List
      description: API Spec 목록
      type: object
      properties:
        apiSpecList:
          type: array
          items:
            $ref: '#/components/schemas/APISpec'
        pageInfo:
          type: object
          properties:
            page:
              type: string
              description: 현재 페이지
            size:
              type: string
              description: 페이지 크기
        totalCount:
          type: integer
          description: 총  건수
        selectedCount:
          type: integer
          description: 조회된 건수
    APISpecQuery:
      title: API spec query condition
      description: API 스펙 조회 조건
      properties:
        specInfo:
          $ref: '#/components/schemas/APISpec'
        dateCondition:
          type: array
          items:
            type: object
            properties:
              createdDate:
                $ref: '#/components/schemas/Audit'
                description: 생성일 조건
              modifiedDate:
                $ref: '#/components/schemas/Audit'
                description: 수정일 조건
          description: 일자 조건 (생성일 및 수정일)
        queryStart:
          type: string
          format: date-time
          description: 조회 시작일시(YYYYMMDDHHmmss)
        queryStop:
          type: string
          format: date-time
          description: 조회 종료일시 (YYYYMMDDHHmmss)
        sortField:
          type: string
          description: 소트대상 필드
        sortOption:
          type: string
          enum:
            - ASC
            - DESC
          description: sort option ASC/DESC